// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	models "github.com/paulocvasco/mercado-frescos-time-7/go-web/internal/models"

	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// Store provides a mock function with given fields: loc
func (_m *Repository) Store(loc models.Locality) (models.Locality, error) {
	ret := _m.Called(loc)

	var r0 models.Locality
	if rf, ok := ret.Get(0).(func(models.Locality) models.Locality); ok {
		r0 = rf(loc)
	} else {
		r0 = ret.Get(0).(models.Locality)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.Locality) error); ok {
		r1 = rf(loc)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewRepository creates a new instance of Repository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRepository(t mockConstructorTestingTNewRepository) *Repository {
	mock := &Repository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
