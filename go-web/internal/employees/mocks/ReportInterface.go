// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	models "mercado-frescos-time-7/go-web/internal/models"

	mock "github.com/stretchr/testify/mock"
)

// ReportInterface is an autogenerated mock type for the ReportInterface type
type ReportInterface struct {
	mock.Mock
}

// GetReportInboundOrders provides a mock function with given fields: id
func (_m *ReportInterface) GetReportInboundOrders(id int) ([]models.ReportInboundOrders, error) {
	ret := _m.Called(id)

	var r0 []models.ReportInboundOrders
	if rf, ok := ret.Get(0).(func(int) []models.ReportInboundOrders); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.ReportInboundOrders)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewReportInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewReportInterface creates a new instance of ReportInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewReportInterface(t mockConstructorTestingTNewReportInterface) *ReportInterface {
	mock := &ReportInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
